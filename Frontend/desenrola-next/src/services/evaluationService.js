import { authPost, authGet } from './http';



/**
 * Cria uma nova avalia√ß√£o para um prestador de servi√ßo.
 * Envia os dados via formul√°rio com ID do prestador, nota e coment√°rio.
 * @param {Object} params Par√¢metros da avalia√ß√£o
 * @param {string} params.providerId ID do prestador avaliado
 * @param {number} params.rating Nota da avalia√ß√£o (1 a 5)
 * @param {string} params.comment Coment√°rio textual da avalia√ß√£o
 * @returns {Promise<Response>} Resposta da API
 */

export const EvaluationService = {
  async createEvaluation({ providerId, rating, comment }) {
    const formData = new FormData();
    formData.append('ProviderId', providerId); // üëà mai√∫sculo
    formData.append('Note', rating.toString()); // üëà int em string
    formData.append('Comment', comment);

    return authPost('/api/evaluation', formData);
  },
/**
 * Busca avalia√ß√µes pendentes do usu√°rio autenticado.
 * @returns {Promise<Array>} Lista de avalia√ß√µes pendentes
 */

  async getPendingEvaluations() {
    return authGet('/api/evaluation/pending'); 
  }
};
