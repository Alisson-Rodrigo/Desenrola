# --- Etapa 1: Build ---
FROM node:20-alpine AS builder

# Diret√≥rio de trabalho dentro do container
WORKDIR /app

# Copiar apenas os arquivos de depend√™ncias para aproveitar cache
COPY package*.json ./

# Instalar depend√™ncias (sem dev packages)
RUN npm ci

# Copiar todo o c√≥digo do projeto
COPY . .

# Desativar ESLint e Telemetry no build (para evitar travamentos)
ENV NEXT_DISABLE_ESLINT=true
ENV NEXT_TELEMETRY_DISABLED=1

# Gerar build otimizado em modo standalone
RUN npm run build

# --- Etapa 2: Servidor de produ√ß√£o ---
FROM node:20-alpine AS runner

# Diret√≥rio de execu√ß√£o
WORKDIR /app

# Vari√°veis de ambiente de produ√ß√£o
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=3000
ENV NEXT_TELEMETRY_DISABLED=1

# Copiar apenas o necess√°rio para rodar o servidor Next.js
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./static

# üîπ Cria a pasta public e copia somente se existir (sem quebrar o build)
RUN mkdir -p ./public
COPY --from=builder /app/public ./public 2>/dev/null || true

# Expor porta padr√£o do Next.js
EXPOSE 3000

# Comando de inicializa√ß√£o (Next.js standalone)
CMD ["node", "server.js"]
