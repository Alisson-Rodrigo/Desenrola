# ============================
# üîπ Etapa 1 ‚Äî Build da aplica√ß√£o
# ============================
FROM node:20-alpine AS builder

# Definir timezone e diret√≥rio de trabalho
ENV TZ=America/Fortaleza
WORKDIR /app

# Instalar depend√™ncias b√°sicas do sistema
RUN apk add --no-cache libc6-compat git

# Copiar apenas arquivos de depend√™ncia (cache otimizado)
COPY package*.json ./

# Instalar depend√™ncias com npm ci (limpo e reproduz√≠vel)
RUN npm ci

# Copiar o restante do c√≥digo da aplica√ß√£o
COPY . .

# Gerar o build otimizado do Next.js
RUN npm run build

# ============================
# üîπ Etapa 2 ‚Äî Imagem leve de produ√ß√£o
# ============================
FROM node:20-alpine AS runner

# Definir diret√≥rio de trabalho
WORKDIR /app

# Vari√°veis de ambiente
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000
ENV HOST=0.0.0.0

# Copiar apenas os arquivos necess√°rios do builder
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/next.config.js ./next.config.js

# Criar usu√°rio seguro (n√£o-root)
RUN addgroup -S nextjs && adduser -S nextjs -G nextjs
USER nextjs

# Expor porta do app
EXPOSE 3000

# Comando para iniciar o servidor de produ√ß√£o
CMD ["npm", "run", "start"]
