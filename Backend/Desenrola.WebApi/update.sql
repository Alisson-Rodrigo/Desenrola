CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "AspNetRoles" (
        "Id" text NOT NULL,
        "Name" character varying(256),
        "NormalizedName" character varying(256),
        "ConcurrencyStamp" text,
        CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "AspNetUsers" (
        "Id" text NOT NULL,
        "Name" text NOT NULL,
        "IsActive" boolean NOT NULL,
        "ImageProfile" text,
        "UserName" character varying(256),
        "NormalizedUserName" character varying(256),
        "Email" character varying(256),
        "NormalizedEmail" character varying(256),
        "EmailConfirmed" boolean NOT NULL,
        "PasswordHash" text,
        "SecurityStamp" text,
        "ConcurrencyStamp" text,
        "PhoneNumber" text,
        "PhoneNumberConfirmed" boolean NOT NULL,
        "TwoFactorEnabled" boolean NOT NULL,
        "LockoutEnd" timestamp with time zone,
        "LockoutEnabled" boolean NOT NULL,
        "AccessFailedCount" integer NOT NULL,
        CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "AspNetRoleClaims" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "RoleId" text NOT NULL,
        "ClaimType" text,
        "ClaimValue" text,
        CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "AspNetUserClaims" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "UserId" text NOT NULL,
        "ClaimType" text,
        "ClaimValue" text,
        CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "AspNetUserLogins" (
        "LoginProvider" character varying(128) NOT NULL,
        "ProviderKey" character varying(128) NOT NULL,
        "ProviderDisplayName" text,
        "UserId" text NOT NULL,
        CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
        CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "AspNetUserRoles" (
        "UserId" text NOT NULL,
        "RoleId" text NOT NULL,
        CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
        CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "AspNetUserTokens" (
        "UserId" text NOT NULL,
        "LoginProvider" character varying(128) NOT NULL,
        "Name" character varying(128) NOT NULL,
        "Value" text,
        CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
        CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "Payments" (
        "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
        "UserId" text NOT NULL,
        "PlanType" integer NOT NULL,
        "SessionId" text NOT NULL,
        "PaymentIntentId" text,
        "StripeInvoiceUrl" text,
        "Amount" numeric NOT NULL,
        "PurchaseDate" timestamp with time zone NOT NULL,
        "ExpirationDate" timestamp with time zone NOT NULL,
        "Status" integer NOT NULL,
        "CreatedOn" timestamp with time zone NOT NULL,
        "ModifiedOn" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_Payments" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Payments_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "Providers" (
        "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
        "UserId" text NOT NULL,
        "CPF" character varying(11) NOT NULL,
        "RG" character varying(20) NOT NULL,
        "DocumentPhotoUrl" text[] NOT NULL,
        "Address" text NOT NULL,
        "ServiceName" text NOT NULL,
        "Description" text NOT NULL,
        "PhoneNumber" text NOT NULL,
        "Categories" integer[] NOT NULL,
        "IsActive" boolean NOT NULL,
        "IsVerified" boolean NOT NULL,
        "CreatedOn" timestamp with time zone NOT NULL,
        "ModifiedOn" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_Providers" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Providers_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "Evaluations" (
        "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
        "UserId" text NOT NULL,
        "ProviderId" uuid NOT NULL,
        "Note" integer NOT NULL,
        "Comment" text,
        "CreatedOn" timestamp with time zone NOT NULL,
        "ModifiedOn" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_Evaluations" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Evaluations_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_Evaluations_Providers_ProviderId" FOREIGN KEY ("ProviderId") REFERENCES "Providers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "ProviderSchedules" (
        "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
        "ProviderId" uuid NOT NULL,
        "DayOfWeek" integer NOT NULL,
        "StartTime" interval NOT NULL,
        "EndTime" interval NOT NULL,
        "IsAvailable" boolean NOT NULL,
        "CreatedOn" timestamp with time zone NOT NULL,
        "ModifiedOn" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_ProviderSchedules" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_ProviderSchedules_Providers_ProviderId" FOREIGN KEY ("ProviderId") REFERENCES "Providers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE TABLE "ProviderServices" (
        "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
        "ProviderId" uuid NOT NULL,
        "Title" character varying(100) NOT NULL,
        "Description" character varying(500) NOT NULL,
        "Price" numeric(10,2),
        "Category" integer NOT NULL,
        "ImageUrls" text[],
        "IsActive" boolean NOT NULL DEFAULT TRUE,
        "IsAvailable" boolean NOT NULL DEFAULT TRUE,
        "CreatedOn" timestamp with time zone NOT NULL DEFAULT (NOW() AT TIME ZONE 'UTC'),
        "ModifiedOn" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_ProviderServices" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_ProviderServices_Providers_ProviderId" FOREIGN KEY ("ProviderId") REFERENCES "Providers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "IX_Evaluations_ProviderId" ON "Evaluations" ("ProviderId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "IX_Evaluations_UserId" ON "Evaluations" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE UNIQUE INDEX "IX_Payments_PaymentIntentId" ON "Payments" ("PaymentIntentId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE UNIQUE INDEX "IX_Payments_SessionId" ON "Payments" ("SessionId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "IX_Payments_UserId" ON "Payments" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE UNIQUE INDEX "IX_Providers_UserId" ON "Providers" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "IX_ProviderSchedules_ProviderId" ON "ProviderSchedules" ("ProviderId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    CREATE INDEX "IX_ProviderServices_ProviderId" ON "ProviderServices" ("ProviderId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251007023737_PaymentsFix') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20251007023737_PaymentsFix', '8.0.6');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008013513_ChatMessage') THEN
    CREATE TABLE "Conversations" (
        "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
        "UserId1" text,
        "UserId2" text,
        "CreatedAt" timestamp with time zone NOT NULL DEFAULT (NOW() AT TIME ZONE 'UTC'),
        "UserId" text,
        "CreatedOn" timestamp with time zone NOT NULL,
        "ModifiedOn" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_Conversations" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Conversations_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
        CONSTRAINT "FK_Conversations_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT,
        CONSTRAINT "FK_Conversations_AspNetUsers_UserId2" FOREIGN KEY ("UserId2") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008013513_ChatMessage') THEN
    CREATE TABLE "Messages" (
        "Id" uuid NOT NULL DEFAULT (uuid_generate_v4()),
        "ConversationId" uuid NOT NULL,
        "SenderId" text,
        "Content" text NOT NULL,
        "SentAt" timestamp with time zone NOT NULL DEFAULT (NOW() AT TIME ZONE 'UTC'),
        "IsRead" boolean NOT NULL,
        "ReadAt" timestamp with time zone,
        "CreatedOn" timestamp with time zone NOT NULL,
        "ModifiedOn" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_Messages" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Messages_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id"),
        CONSTRAINT "FK_Messages_Conversations_ConversationId" FOREIGN KEY ("ConversationId") REFERENCES "Conversations" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008013513_ChatMessage') THEN
    CREATE INDEX "IX_Conversations_UserId" ON "Conversations" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008013513_ChatMessage') THEN
    CREATE INDEX "IX_Conversations_UserId1" ON "Conversations" ("UserId1");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008013513_ChatMessage') THEN
    CREATE INDEX "IX_Conversations_UserId2" ON "Conversations" ("UserId2");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008013513_ChatMessage') THEN
    CREATE INDEX "IX_Messages_ConversationId" ON "Messages" ("ConversationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008013513_ChatMessage') THEN
    CREATE INDEX "IX_Messages_SenderId" ON "Messages" ("SenderId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008013513_ChatMessage') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20251008013513_ChatMessage', '8.0.6');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008021231_favoritemodel') THEN
    CREATE TABLE "Favorite" (
        "UserId" text NOT NULL,
        "ProviderId" uuid NOT NULL,
        "Id" uuid NOT NULL,
        "CreatedOn" timestamp with time zone NOT NULL,
        "ModifiedOn" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_Favorite" PRIMARY KEY ("UserId", "ProviderId"),
        CONSTRAINT "FK_Favorite_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_Favorite_Providers_ProviderId" FOREIGN KEY ("ProviderId") REFERENCES "Providers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008021231_favoritemodel') THEN
    CREATE INDEX "IX_Favorite_ProviderId" ON "Favorite" ("ProviderId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20251008021231_favoritemodel') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20251008021231_favoritemodel', '8.0.6');
    END IF;
END $EF$;
COMMIT;

